@namespace AntBlazor
@inherits AntSubMenuBase

<CascadingValue Value=this>
    <li nz-submenu class="@ClassMapper.Class" @ref="Ref" style="@Style" @attributes="Attributes" Id="@Id">
        <div class="@TitleDivClass.Class" style="@titleStyle"
             @onmouseover="()=>setMouseEnterState(true)"
             @onmouseout="()=>setMouseEnterState(false)"
             @onclick="()=> clickSubMenuTitle()">
            @if (nzIcon != null)
            {
                <AntIcon Type="@nzIcon"></AntIcon>
            }
            @*<ng-container *nzStringTemplateOutlet="nzTitle">*@
            <span>@((MarkupString)nzTitle)</span>
            @*</ng-container>*@
            @*<ng-content select="[title]" *ngIf="!nzTitle"></ng-content>*@

            @if (Menu.isInDropDown)
            {
                <span class="ant-dropdown-menu-submenu-arrow">
                    <AntIcon Type="right" class="anticon-right ant-dropdown-menu-submenu-arrow-icon"></AntIcon>
                </span>
            }
            else
            {
                <i class="ant-menu-submenu-arrow"></i>
            }
        </div>
        @if (Menu.nzMode == NzDirectionVHIType.inline)
        {
            <ul class="@nzMenuClassName ant-menu ant-menu-inline ant-menu-sub" style="transition: height 0.5s; @submenuStyle">
                @ChildContent
            </ul>
        }
    </li>
</CascadingValue>
@code {

    string titleStyle => Menu.nzMode == NzDirectionVHIType.inline ?
        $"padding-left:{(nzPaddingLeft ?? Level * Menu.nzInlineIndent)}px" : "";

    string submenuStyle => nzOpen ? "" : "height: 0px; overflow: hidden;";

    protected override void OnInitialized()
    {
        base.OnInitialized();
        TitleDivClass
            .If("ant-dropdown-menu-submenu-title", () => Menu.isInDropDown)
            .If("ant-menu-submenu-title", () => !Menu.isInDropDown)
            ;
    }

}